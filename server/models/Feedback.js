//Feedback.js
const mongoose = require('mongoose')

const feedbackSchema = new mongoose.Schema({
    user:{
        type: mongoose.Schema.Types.ObjectId,
        ref: 'User',
        required: true,
    },
    category: {
        type: String,
        required: true,
        enum: [
            "Smartphones & tablets",
            "Laptops & computers",
            "TVs & home theater systems",
            "Smartwatches & fitness trackers",
            "Audio equipment (headphones, speakers)",
            "Gaming consoles & accessories",
            "Home appliances (refrigerators, washing machines)",
            "Men’s clothing",
            "Women’s clothing",
            "Kids’ clothing",
            "Footwear",
            "Accessories (watches, jewelry, sunglasses)",
            "Bags & luggage",
            "Furniture",
            "Cookware & bakeware",
            "Storage & organization items",
            "Cleaning supplies",
            "Home décor items",
            "Lighting products",
            "Toiletries (soap, shampoo, toothpaste)",
            "Hygiene products",
            "Skincare products",
            "Haircare products",
            "Makeup / Cosmetics",
            "Health supplements",
            "Packaged food",
            "Fresh produce",
            "Beverages (coffee, tea, soft drinks)",
            "Snacks",
            "Organic / specialty food",
            "Baby food",
            "Diapers",
            "Toys & games",
            "Strollers, cribs, and baby gear",
            "Pet food",
            "Pet accessories (leashes, collars, litter)",
            "Pet toys",
            "Pet grooming products",
            "Movies (theatrical releases)",
            "TV shows / streaming series",
            "Documentaries",
            "Short films / web series",
            "Animated content",
            "Fiction books",
            "Non-fiction books",
            "Comics & graphic novels",
            "Academic or educational books",
            "Music albums / EPs / singles",
            "Live performances / concerts",
            "Streaming music experiences",
            "Console games",
            "PC games",
            "Mobile games",
            "Online / multiplayer games",
            "Game DLCs & expansions",
            "Productivity apps",
            "Design tools",
            "Social media platforms",
            "Utility apps",
            "Restaurants",
            "Cafés",
            "Takeout / delivery services",
            "Hotel rooms",
            "Hotel amenities",
            "Hotel staff & service",
            "Tourist destinations",
            "Local experiences",
            "Attractions / landmarks",
            "Nature parks",
            "Concerts",
            "Theater / plays",
            "Conventions / expos",
            "Festivals",
            "Schools / colleges",
            "Online courses",
            "Coaching centers",
            "Tutors",
            "Hospitals",
            "Clinics",
            "Doctors / specialists",
            "Wellness centers",
            "Mental health services",
            "Cars",
            "Bikes",
            "Buses",
            "Trains",
            "Metros",
            "Ride-hailing services (Uber, Lyft)",
            "Taxi services",
            "Airlines",
            "Car rentals",
            "Scooter / bike rentals",
            "Vacation rentals (Airbnb)",
            "E-commerce websites",
            "Learning platforms",
            "Streaming platforms",
            "Forums & communities",
            "Tech support",
            "Warranty services",
            "Complaint handling",
            "Banks",
            "Insurance providers",
            "Mobile wallets",
            "Credit card companies",
            "Internet providers",
            "Electricity/gas services",
            "Subscription boxes",
            "Cloud services",
            "Others"
        ]
    },
    title:{
        type: String,
        required: true,
        trim: true,
    },
    message:{
        type: String,
        required: true,
    },
    rating:{
        type: Number,
        min: 0,
        max: 10,
        default: null,
    },
    images: [
        {
            type: String,
        }
    ],
    likes: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],
    createdAt:{
        type: Date,
        default: Date.now,
    }
}, { timestamps: true });

const Feedback = mongoose.model("Feedback", feedbackSchema);

module.exports = Feedback;